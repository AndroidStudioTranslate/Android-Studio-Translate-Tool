/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package translation.view;

import java.awt.datatransfer.DataFlavor;
import java.awt.dnd.DnDConstants;
import java.awt.dnd.DropTarget;
import java.awt.dnd.DropTargetAdapter;
import java.awt.dnd.DropTargetDropEvent;
import java.awt.event.*;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Iterator;
import java.util.List;
import java.util.jar.JarFile;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.zip.ZipEntry;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollBar;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import test.Google;
import test.TranslateUtil;
import translation.*;

/**
 *
 * @author v
 */
public class TAS extends javax.swing.JFrame {

    /**
     * Creates new form TAS
     */
    public TAS() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new JTA();
        jButton2 = new javax.swing.JButton();
        jDialog2 = new javax.swing.JDialog();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jDialog3 = new javax.swing.JDialog();
        jTextField_newfile = new javax.swing.JTextField();
        jButton_new = new javax.swing.JButton();
        jTextField_oldfile = new javax.swing.JTextField();
        jButton_old = new javax.swing.JButton();
        jButton_compare = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea_list = new javax.swing.JTextArea();
        jTextField_file = new javax.swing.JTextField();
        jButton_fileview1 = new javax.swing.JButton();
        jButton_getJarContext = new javax.swing.JButton();
        jTextField_bak = new javax.swing.JTextField();
        jButton_fileview2 = new javax.swing.JButton();
        jButton_saveProperties = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_show = new JTA();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea_old = new JTA();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        jDialog1.setAlwaysOnTop(true);
        jDialog1.setLocationByPlatform(true);
        jDialog1.setMinimumSize(new java.awt.Dimension(500, 400));

        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        jButton2.setText("修                             改");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
            .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
            .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jDialog1Layout.createSequentialGroup()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                    .addGap(39, 39, 39)))
            .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog1Layout.createSequentialGroup()
                    .addGap(0, 264, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jDialog2.setAlwaysOnTop(true);
        jDialog2.setMinimumSize(new java.awt.Dimension(300, 120));

        jLabel2.setText("替换");

        jLabel3.setText("为");

        jButton4.setText("全 部 替 换");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jButton5.setText("取  消");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog2Layout.createSequentialGroup()
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3))
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButton5))
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addContainerGap())
        );

        jDialog3.setTitle("比较新旧版");
        jDialog3.setMinimumSize(new java.awt.Dimension(500, 300));

        jTextField_newfile.setColumns(30);
        jTextField_newfile.setText("G:\\as汉化\\resources_en20140221.jar");

        jButton_new.setText("新");
        jButton_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_newActionPerformed(evt);
            }
        });

        jTextField_oldfile.setColumns(30);
        jTextField_oldfile.setText("G:\\as汉化\\old\\AndroidStudio源文件备份.jar");

        jButton_old.setText("旧");
        jButton_old.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_oldActionPerformed(evt);
            }
        });

        jButton_compare.setText("比  较");
        jButton_compare.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_compareMouseClicked(evt);
            }
        });

        bar_compare = jScrollPane5.getVerticalScrollBar();

        jTextArea_list.setColumns(20);
        jTextArea_list.setEditable(false);
        jTextArea_list.setRows(5);
        jScrollPane5.setViewportView(jTextArea_list);

        javax.swing.GroupLayout jDialog3Layout = new javax.swing.GroupLayout(jDialog3.getContentPane());
        jDialog3.getContentPane().setLayout(jDialog3Layout);
        jDialog3Layout.setHorizontalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(jDialog3Layout.createSequentialGroup()
                        .addGroup(jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDialog3Layout.createSequentialGroup()
                                .addComponent(jTextField_newfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton_new))
                            .addGroup(jDialog3Layout.createSequentialGroup()
                                .addComponent(jTextField_oldfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton_old)))
                        .addGap(18, 18, 18)
                        .addComponent(jButton_compare, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jDialog3Layout.setVerticalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton_compare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jDialog3Layout.createSequentialGroup()
                        .addGroup(jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_newfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_new))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_oldfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_old))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("翻译属性文件工具");

        jTextField_file.setText("G:\\as汉化\\resources_en20140221.jar");
        jTextField_file.setToolTipText("原始属性文件");
        new DropTarget(jTextField_file, DnDConstants.ACTION_COPY_OR_MOVE, new MyDropTargetListener(this));

        jButton_fileview1.setText("浏览");
        jButton_fileview1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_fileview1ActionPerformed(evt);
            }
        });

        jButton_getJarContext.setText("获取jar包目录");
        jButton_getJarContext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_getJarContextActionPerformed(evt);
            }
        });

        jTextField_bak.setToolTipText("保存属性文件");
        jTextField_bak.setVisible(false);

        jButton_fileview2.setText("浏览");
        jButton_fileview2.setVisible(false);
        jButton_fileview2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_fileview2ActionPerformed(evt);
            }
        });

        jButton_saveProperties.setText("保存属性值文件");
        jButton_saveProperties.setEnabled(false);
        jButton_saveProperties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_savePropertiesActionPerformed(evt);
            }
        });

        jScrollPane1.setToolTipText("显示属性值和存放翻译后的属性值");
        bar = jScrollPane4.getVerticalScrollBar();
        bar1 = jScrollPane1.getVerticalScrollBar();
        jScrollPane1.setInheritsPopupMenu(true);
        jScrollPane1.addMouseWheelListener(new MouseWheelListener() {

            @Override
            public void mouseWheelMoved(MouseWheelEvent e) {
                bar.setValue(bar1.getValue());
            }
        });

        jTextArea_show.setColumns(20);
        jTextArea_show.setFont(new java.awt.Font("新宋体", 0, 13)); // NOI18N
        jTextArea_show.setRows(5);
        jScrollPane1.setViewportView(jTextArea_show);

        listmousedoubleclicklistener();
        jScrollPane2.setViewportView(jList1);
        jList1.addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                jTextField1.setText(jList1.getSelectedValue().toString());
            }
        });

        jScrollPane4.addMouseWheelListener(new MouseWheelListener(){

            @Override
            public void mouseWheelMoved(MouseWheelEvent e) {
                JScrollBar bar=jScrollPane1.getVerticalScrollBar();
                JScrollBar bar1=jScrollPane4.getVerticalScrollBar();
                bar.setValue(bar1.getValue());
            }

        });

        jTextArea_old.setColumns(20);
        jTextArea_old.setEditable(false);
        jTextArea_old.setFont(new java.awt.Font("新宋体", 0, 13)); // NOI18N
        jTextArea_old.setRows(5);
        jScrollPane4.setViewportView(jTextArea_old);

        jTextField1.setText("");

        jButton1.setText("查看");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.setVisible(false);

        jCheckBox1.setText("翻译");

        jButton3.setText("替换");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jButton6.setText("比较新旧版本");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane4)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField_file, javax.swing.GroupLayout.DEFAULT_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField_bak, javax.swing.GroupLayout.DEFAULT_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton_fileview2)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton_fileview1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton_getJarContext)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jButton_saveProperties))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3)))))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField_file, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_fileview1)
                        .addComponent(jButton_getJarContext)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1))
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField_bak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_fileview2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3)
                        .addComponent(jButton6)))
                .addGap(158, 158, 158)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addComponent(jButton_saveProperties))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(71, 71, 71)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(363, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_fileview1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_fileview1ActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.setFileSelectionMode(0);//设置选择文件模式0为选择文件，1为目录,2为目录或文件
        jfc.setDialogTitle("请选择原始属性文件");//标题
        if (jTextField_file.getText().toString() != null) {
            jfc.setCurrentDirectory(new File(jTextField_file.getText()).getParentFile());
        }
        int result = jfc.showDialog(null, null);
        if (result == 0) {
            f = jfc.getSelectedFile();
            String file = f.getAbsolutePath();
            jTextField_file.setText(file);
        }
    }//GEN-LAST:event_jButton_fileview1ActionPerformed

    private void jButton_fileview2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_fileview2ActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.setFileSelectionMode(1);//设置选择文件模式0为选择文件，1为目录,2为目录或文件
        jfc.setDialogTitle("请选择保存属性文件路径");//标题
        if (jTextField_file.getText().toString() != null) {
            jfc.setCurrentDirectory(new File(jTextField_file.getText()).getParentFile());
        }
        int result = jfc.showDialog(null, null);
        if (result == 0) {
            f1 = jfc.getSelectedFile();
            String file = f1.getAbsolutePath();
            jTextField_bak.setText(file);
        }
    }//GEN-LAST:event_jButton_fileview2ActionPerformed

    private void jButton_getJarContextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_getJarContextActionPerformed
//        JarFile jarFile = null;
//        if (chooseConfigPath != null) {
//            try {
//                jarFile = new JarFile(jTextField_file.getText());
//                ZipEntry entry = jarFile.getEntry(chooseConfigPath);
//                if (entry == null) {
//                    System.out.println(chooseConfigPath + "路径所代表的文件不存在!读取失败~");
//                    // 安全起见，将 jarFile 置为 null，这样在关闭窗口的时候将不会执行收尾操作~  
//                }
//
//                //获取到inputstream了 就相当简单了  
//                InputStream is = jarFile.getInputStream(entry);
//                byte[] bytes = PropertiesControl.inputStream2byteArray(is);
//                String cfgStr = new String(bytes);
//                jTextArea_show.setText(cfgStr);
//            } catch (IOException e) {
//                e.printStackTrace();
//            }
//        }
//        try {
//            String content[] = pc.getValues(jTextField_file.getText());
//            StringBuffer sb = new StringBuffer();
//            for (int i = 0; i < content.length; i++) {
//                if (content[i].equals("")) {
//                    sb.append(newline);
//                } else {
//                    if (i == content.length - 1) {
//                        sb.append(content[i]);
//                    } else {
//                        sb.append(content[i] + newline);
//                    }
//                }
//            }
//            jTextArea_show.setText(sb.toString());
//        } catch (Exception e) {
//            jTextField_file.setText("请选择原始属性文件");
//            jButton_fileview1.doClick();
//        }

        jList1.setModel(new javax.swing.AbstractListModel() {

            String[] strings = PropertiesControl.getJarFileContent(new java.io.File(jTextField_file.getText().toString()));

            public int getSize() {
                return strings.length;
            }

            public Object getElementAt(int i) {
                return strings[i];
            }
        });
        jList1.updateUI();
        jButton1.setVisible(true);
        jList1.setSelectedIndex(0);
    }//GEN-LAST:event_jButton_getJarContextActionPerformed

    private void jButton_savePropertiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_savePropertiesActionPerformed
        String[] jtaValues = jTextArea_show.getText().split(newline);
        StringBuffer sb = new StringBuffer();
        File jarFilePath = new File(jTextField_file.getText().toString());
        //System.out.println(keys.length + "   " + jtaValues.length);
        for (int i = 0; i < keys.length; i++) {
            if (jtaValues[i].contains("@n@")) {
                sb.append(keys[i] + "=" + jtaValues[i].replace("@n@", "\\n\\"));
            } else {
                if (keys[i].equals("")) {
                    sb.append(newline);
                } else if (keys[i].contains("#")) {
                    sb.append(keys[i] + newline);
                } else {
                    if (i == keys.length - 1) {
                        sb.append(keys[i] + "=" + wt.utf8ToUnicode(jtaValues[i]));
                    } else {
                        sb.append(keys[i] + "=" + wt.utf8ToUnicode(jtaValues[i]) + newline);
                    }
                }
            }
            //System.out.println((i + 1) + "   " + keys[i] + "=" + jtaValues[i]);
        }
        //System.out.println(jTextField_file.getText().toString() + "    " + chooseConfigPath + "     " + sb.toString().getBytes());
        pc.write2JarFile(jarFilePath, chooseConfigPath, sb.toString().replace("{ ", "{").replace(" }", "}").getBytes());
        try {
            File f = new File(jarFilePath.getParent(), "已翻译文件路径记录.txt");
            if (!f.exists()) {
                f.createNewFile();
            }
            FileOutputStream out = new FileOutputStream(f, true);//第二参数为true时，从文件结尾添加
            out.write((newline + chooseConfigPath).getBytes());
            out.flush();
            out.close();
        } catch (IOException ex) {
            Logger.getLogger(TAS.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextField_file.setText(jTextField_file.getText().toString().substring(0, jTextField_file.getText().toString().length() - 4) + "_temp.jar");
        jButton_getJarContext.doClick();
        jList1.setSelectedIndex(index);
//        pc.put(jTextField_bak.getText(), pc.getKeys(jTextField_file.getText()), content1);
    }//GEN-LAST:event_jButton_savePropertiesActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        System.out.println(jTextField1.getText().toString());
        if (jTextField1.getText().toString() != null || !jTextField1.getText().toString().equals("")) {
            jDialog1.show();
            jButton2.setText("修                             改");
            jTextArea1.setEditable(false);
            jDialog1.setTitle("预览属性文件（不可编辑）");
            final MouseEvent e = evt;
            new Thread() {

                @Override
                public void run() {
                    chooseConfigPath = jTextField1.getText().toString();
                    JarFile jarFile = null;
                    try {
                        jarFile = new JarFile(jTextField_file.getText().toString());
                        int index = jList1.locationToIndex(e.getPoint());

                        ZipEntry entry = jarFile.getEntry(chooseConfigPath);
                        if (entry == null) {
                            System.out.println(chooseConfigPath + "路径所代表的文件不存在!读取失败~");
                            // 安全起见，将 jarFile 置为 null，这样在关闭窗口的时候将不会执行收尾操作~  
                        }

                        //获取到inputstream了 就相当简单了  
                        InputStream is = jarFile.getInputStream(entry);
                        byte[] bytes = pc.inputStream2byteArray(is);
                        String cfgStr = new String(bytes);
                        String[] values = pc.getBytesValue(bytes);
                        String temp = "";
                        StringBuffer sb = new StringBuffer();
                        for (int i = 0; i < values.length; i++) {
                            sb.append(wt.UnicodeToGBK(values[i]) + newline);
                        }
                        jDialog1.setTitle("预览属性文件（不可编辑）    " + values.length + "行");
                        jTextArea1.setText(sb.toString());
                    } catch (IOException ioe) {
                        ioe.printStackTrace();
                    }
                }
            }.start();
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        if (jTextArea1.isEditable()) {
            String[] kv = jTextArea1.getText().split("\n");
            StringBuffer sb = new StringBuffer();
            File jarFilePath = new File(jTextField_file.getText().toString());
            //System.out.println(keys.length + "   " + jtaValues.length);
            for (int i = 0; i < kv.length; i++) {
                if (i == 0) {
                    sb.append(wt.utf8ToUnicode(kv[i]));
                } else {
                    sb.append(newline + wt.utf8ToUnicode(kv[i]));
                }
                //System.out.println((i + 1) + "   " + keys[i] + "=" + jtaValues[i]);
            }
            //System.out.println(jTextField_file.getText().toString() + "    " + chooseConfigPath + "     " + sb.toString().getBytes());
            pc.write2JarFile(jarFilePath, chooseConfigPath, sb.toString().replace("{ ", "{").replace(" }", "}").getBytes());
            jDialog1.hide();
            jTextField_file.setText(jTextField_file.getText().toString().substring(0, jTextField_file.getText().toString().length() - 4) + "_temp.jar");
            jButton_getJarContext.doClick();
            jList1.setSelectedIndex(index);
            jButton2.setText("修                             改");
            jTextArea1.setEditable(false);
        } else {
            jButton2.setText("保                             存");
            jTextArea1.setEditable(true);
            jDialog1.setTitle(jDialog1.getTitle().replace("不可编辑", "可编辑"));
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        jDialog2.show();
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        jTextArea_show.setText(jTextArea_show.getText().replaceAll(jTextField2.getText().toString(), jTextField3.getText().toString()));
        jDialog2.hide();
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        jDialog2.hide();
    }//GEN-LAST:event_jButton5MouseClicked

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        //比较新旧版本
        jDialog3.show();
    }//GEN-LAST:event_jButton6MouseClicked

    private void jButton_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_newActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.setFileSelectionMode(0);//设置选择文件模式0为选择文件，1为目录,2为目录或文件
        jfc.setDialogTitle("请选择新版属性文件");//标题
        if (jTextField_newfile.getText().toString() != null) {
            jfc.setCurrentDirectory(new File(jTextField_newfile.getText()).getParentFile());
        }
        int result = jfc.showDialog(null, null);
        if (result == 0) {
            fnew = jfc.getSelectedFile();
            String file = fnew.getAbsolutePath();
            jTextField_newfile.setText(file);
            newfiles = PropertiesControl.getJarFileContent(new java.io.File(jTextField_newfile.getText().toString()));

        }
    }//GEN-LAST:event_jButton_newActionPerformed

    private void jButton_oldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_oldActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.setFileSelectionMode(0);//设置选择文件模式0为选择文件，1为目录,2为目录或文件
        jfc.setDialogTitle("请选择旧版属性文件");//标题
        if (jTextField_oldfile.getText().toString() != null) {
            jfc.setCurrentDirectory(new File(jTextField_oldfile.getText()).getParentFile());
        }
        int result = jfc.showDialog(null, null);
        if (result == 0) {
            fold = jfc.getSelectedFile();
            String file = fold.getAbsolutePath();
            jTextField_oldfile.setText(file);
            oldfiles = PropertiesControl.getJarFileContent(new java.io.File(jTextField_oldfile.getText().toString()));

        }
    }//GEN-LAST:event_jButton_oldActionPerformed

    private void jButton_compareMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_compareMouseClicked
        new Thread(new Runnable() {

            @Override
            public void run() {

                JarFile newjarFile = null, oldjarFile = null;
                try {
                    newjarFile = new JarFile(jTextField_newfile.getText().toString());
                    oldjarFile = new JarFile(jTextField_oldfile.getText().toString());
                    for (int i = 0; i < newfiles.length; i++) {
                        //System.out.println("Newfile:" + newfiles[i] + "  Oldfile:" + oldfiles[i]);
                        ZipEntry entrynew = newjarFile.getEntry(newfiles[i]);
                        ZipEntry entryold = oldjarFile.getEntry(oldfiles[i]);
                        InputStream isnew = newjarFile.getInputStream(entrynew);
                        InputStream isold = oldjarFile.getInputStream(entryold);
                        byte[] bytesnew = pc.inputStream2byteArray(isnew);
                        byte[] bytesold = pc.inputStream2byteArray(isold);
                        newvalues = pc.getBytesValue(bytesnew);
                        newkeys = new String[newvalues.length];
                        oldvalues = pc.getBytesValue(bytesold);
                        oldkeys = new String[oldvalues.length];
                        for (int j = 0; j < newvalues.length; j++) {
                            if (!newvalues[j].contains("=")) {
                                newkeys[j] = newvalues[j];
                            } else {
                                newkeys[j] = newvalues[j].substring(0, newvalues[j].indexOf("="));
                            }
                            //System.out.println(i+"  new :"+newkeys[j]);
                        }
                        //System.out.println("test1111");
                        for (int j = 0; j < oldvalues.length; j++) {
                            if (!oldvalues[j].contains("=")) {
                                oldkeys[j] = oldvalues[j];
                            } else {
                                oldkeys[j] = oldvalues[j].substring(0, oldvalues[j].indexOf("="));
                            }
                            System.out.println(j + "  old :" + oldvalues[j]);
                        }
                        //System.out.println("test11112222");
                        int same = 0;
                        StringBuffer sb = new StringBuffer();
                        if (newvalues.length > oldvalues.length) {
                            //System.out.println("test1");
                            valuestemp = new String[newvalues.length];
                            for (int j = 0; j < newvalues.length; j++) {
                                for (int k = 0; k < oldvalues.length; k++) {
                                    if (oldvalues[k].equals(newvalues[j])) {
                                        valuestemp[j] = oldvalues[k];
                                        same++;
                                    }
                                }
                                if (same == 0) {
                                    valuestemp[j] = newvalues[j];
                                }
                                System.out.println(j + "   >>>" + valuestemp[j]);
                            }
                            for (int k = 0; k < newvalues.length; k++) {
                                if (k == 0) {
                                    sb.append(valuestemp[k]);
                                } else {
                                    sb.append(newline + valuestemp[k]);
                                }
                            }
                        } else if (newvalues.length == oldvalues.length) {
                            for (int k = 0; k < newvalues.length; k++) {
                                if (k == 0) {
                                    sb.append(oldvalues[k]);
                                } else {
                                    sb.append(newline + oldvalues[k]);
                                }
                            }
                        } else {
                            // System.out.println("test2");
                            valuestemp = new String[oldvalues.length];
                            for (int j = 0; j < oldvalues.length; j++) {
                                for (int k = 0; k < newvalues.length; k++) {
                                    //System.out.println("test3");
                                    if (oldvalues[j].equals(newvalues[k])) {
                                        valuestemp[j] = oldvalues[j];
                                        same++;
                                    }
                                }
                                if (same == 0) {
                                    valuestemp[j] = oldvalues[j];
                                }
                                System.out.println(j + "---->" + valuestemp[j]);
                            }
                            for (int k = 0; k < oldvalues.length; k++) {
                                if (k == 0) {
                                    sb.append(valuestemp[k]);
                                } else {
                                    sb.append(newline + valuestemp[k]);
                                }
                            }
                            //System.out.println(sb.toString());
                        }
                        pc.write2JarFile(new File(jTextField_oldfile.getText().toString()), newfiles[i], sb.toString().getBytes());
                        String listtemp = "";
                        if (i == 0) {
                            listtemp = newfiles[i];
                        } else {
                            listtemp = newline + newfiles[i];
                        }
                        System.out.println(i + "---->" + listtemp);
                        jTextArea_list.append(listtemp);
                        bar_compare.setValue(bar_compare.getMaximum());
                        Thread.sleep(1000);
                    }

                } catch (Exception e) {
                }
                jTextArea_list.append(newline + "比较完毕！！！");
                bar_compare.setValue(bar_compare.getMaximum());

            }
        }).start();
    }//GEN-LAST:event_jButton_compareMouseClicked

    public void listmousedoubleclicklistener() {
        jList1.addMouseListener(new MouseListener() {

            @Override
            public void mouseClicked(final MouseEvent e) {
                if (e.getClickCount() == 2 & e.getButton() == MouseEvent.BUTTON1) {
                    new Thread() {

                        @Override
                        public void run() {
                            long timestart = System.currentTimeMillis();
                            int sleeptime = 0;
                            chooseConfigPath = jList1.getSelectedValue().toString();
                            index = jList1.locationToIndex(e.getPoint());
                            JarFile jarFile = null;
                            try {
                                jarFile = new JarFile(jTextField_file.getText().toString());
                                int index = jList1.locationToIndex(e.getPoint());

                                ZipEntry entry = jarFile.getEntry(chooseConfigPath);
                                if (entry == null) {
                                    System.out.println(chooseConfigPath + "路径所代表的文件不存在!读取失败~");
                                    // 安全起见，将 jarFile 置为 null，这样在关闭窗口的时候将不会执行收尾操作~  
                                }

                                //获取到inputstream了 就相当简单了  
                                InputStream is = jarFile.getInputStream(entry);
                                byte[] bytes = pc.inputStream2byteArray(is);
                                String cfgStr = new String(bytes);
                                String[] values = pc.getBytesValue(bytes);
                                keys = new String[values.length];
                                String temp = "";
                                StringBuffer sb = new StringBuffer();
                                StringBuffer sb1 = new StringBuffer();
                                jProgressBar1.setMaximum(values.length);
                                for (int i = 0; i < values.length; i++) {
                                    if (!values[i].contains("=")) {
                                        keys[i] = values[i];
                                        sb.append(newline);
                                        sb1.append(newline);
                                    } else {
                                        if (values[i].contains("\\n\\")) {
                                            keys[i] = values[i].replace("\\n\\", "@n@").substring(0, values[i].replace("\\n\\", "@n@").lastIndexOf("="));
                                            // System.out.println("test   " + (i + 1) + "  " + values[i]);

                                        } else {
                                            keys[i] = values[i].substring(0, values[i].lastIndexOf("="));

                                        }
                                        if (values[i].substring(values[i].lastIndexOf("=") + 1).equals("true") || values[i].substring(values[i].lastIndexOf("=") + 1).equals("false") || values[i].substring(values[i].lastIndexOf("=") + 1).matches("[0-9]*")) {
                                            sb.append(values[i].substring(values[i].lastIndexOf("=") + 1).replace("{ ", "{").replace(" }", "}") + newline);
                                        } else {
                                            if (jCheckBox1.isSelected() & !values[i].substring(values[i].lastIndexOf("=") + 1).contains("\\u")) {
                                                String t = "";
                                                if (values[i].substring(values[i].lastIndexOf("=") + 1).contains("&")) {
                                                    t = post.tg1(values[i].substring(values[i].lastIndexOf("=") + 1).replaceAll("&", ""));
                                                    String temp1 = values[i].substring(values[i].lastIndexOf("=") + 1);
                                                    temp1 = temp1.substring(temp1.indexOf("&"));
                                                    temp1 = temp1.substring(0, 2);
                                                    temp1 = "(" + temp1 + ")";
                                                    t = t + temp1;
                                                } else {
                                                    t = post.tg1(values[i].substring(values[i].lastIndexOf("=") + 1));
                                                }
                                                if (t.equals("error")) {
                                                    sb.append(values[i].substring(values[i].lastIndexOf("=") + 1).replace("{ ", "{").replace(" }", "}") + newline);
                                                } else {
//                                                    if (t.contains("@viz@")) {
//                                                        sb.append(t.substring(t.indexOf("@viz@") + "@viz@".length()).replace("{ ", "{").replace(" }", "}") + newline);
//                                                    } else {
//                                                        sb.append(t + newline);
//                                                    }
                                                    sb.append(t + newline);
                                                }
                                                sleeptime = 50;
                                            } else {
                                                sb.append(values[i].substring(values[i].lastIndexOf("=") + 1).replace("{ ", "{").replace(" }", "}") + newline);
                                                sleeptime = 0;
                                            }
                                        }
                                        sb1.append(values[i].substring(values[i].lastIndexOf("=") + 1).replace("{ ", "{").replace(" }", "}") + newline);
                                    }
                                    jProgressBar1.setValue(i + 1);
                                    jLabel1.setText((i + 1) + "");
                                    jTextArea_show.setText(sb.toString());
                                    jTextArea_old.setText(sb1.toString());
                                    bar1.setValue(bar1.getMaximum());
                                    bar.setValue(bar1.getValue());
                                    try {
                                        Thread.sleep(sleeptime);
                                    } catch (Exception e) {
                                        e.printStackTrace();
                                    }
                                }
                            } catch (IOException ioe) {
                                ioe.printStackTrace();
                            }
                            long timeend = System.currentTimeMillis();
                            jButton_saveProperties.setEnabled(true);
                            if (jCheckBox1.isSelected()) {
                                jLabel1.setText(jLabel1.getText().toString() + "  翻译完成(用时" + (timeend - timestart) + "毫秒)");
                            } else {
                                jLabel1.setText(jLabel1.getText().toString());
                            }
                        }
                    }.start();
                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TAS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TAS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TAS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TAS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new TAS().setVisible(true);
            }
        });
    }

    /**
     * @author Bruce Yang 拖拽监听~
     */
    class MyDropTargetListener extends DropTargetAdapter {

        private TAS tas;

        public MyDropTargetListener(TAS tas) {
            this.tas = tas;
        }

        @Override
        @SuppressWarnings("unchecked")
        public void drop(DropTargetDropEvent event) {
            if (event.isDataFlavorSupported(DataFlavor.javaFileListFlavor)) {
                event.acceptDrop(DnDConstants.ACTION_COPY_OR_MOVE);

                DataFlavor df = DataFlavor.javaFileListFlavor;
                List<File> list = null;
                try {
                    list = (List<File>) (event.getTransferable().getTransferData(df));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                Iterator<File> iterator = list.iterator();
                while (iterator.hasNext()) {
                    File file = iterator.next();
                    if (file.exists() && file.isFile()) {
                        String filePath = file.getAbsolutePath();
                        if (filePath == null || filePath.equals("")) {
                            System.out.println("文件名为 null 或为 \"\"~");
                            break;
                        }
                        if (!filePath.endsWith(".jar")) {
                            String str = "此工具专门为jar包设计，不通用!! 请注意!!";
                            JOptionPane.showMessageDialog(null, str);
                            break;
                        }
                        tas.jTextField_file.setText(filePath);
                        System.out.println("jarFilePath=" + filePath);


                    }
                    // 一次只能处理一个，要避免处理多个的情况，因此 break 跳出~  
                    break;
                }
                event.dropComplete(true);
            } else {
                event.rejectDrop();
            }
        }
    }
    private java.io.File f, f1, fnew, fold;
    PropertiesControl pc = new PropertiesControl();
    //private static String newline = System.getProperty("line.separator");
    private static String newline = "\r\n";
    private static String chooseConfigPath = null;
    String[] keys, newfiles, newkeys, newvalues, oldfiles, oldkeys, oldvalues, valuestemp;
    HttpDownloader hd = new HttpDownloader();
    WordsTransfer wt = new WordsTransfer();
    Post post = new Post();
    String translate_site = "http://zhangwei911.duapp.com/TranslateGet.jsp";
    JScrollBar bar, bar1, bar_compare;
    int index = 0;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton_compare;
    private javax.swing.JButton jButton_fileview1;
    private javax.swing.JButton jButton_fileview2;
    private javax.swing.JButton jButton_getJarContext;
    private javax.swing.JButton jButton_new;
    private javax.swing.JButton jButton_old;
    private javax.swing.JButton jButton_saveProperties;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JDialog jDialog3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList jList1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea_list;
    private javax.swing.JTextArea jTextArea_old;
    private javax.swing.JTextArea jTextArea_show;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField_bak;
    private javax.swing.JTextField jTextField_file;
    private javax.swing.JTextField jTextField_newfile;
    private javax.swing.JTextField jTextField_oldfile;
    // End of variables declaration//GEN-END:variables
}
